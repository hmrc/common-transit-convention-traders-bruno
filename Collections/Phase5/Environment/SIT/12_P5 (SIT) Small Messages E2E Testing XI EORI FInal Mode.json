{
  "name": "12_P5 (SIT) Small Messages E2E Testing XI EORI FInal Mode",
  "version": "1",
  "items": [
    {
      "type": "folder",
      "name": "-BLOCKED-18 - Simplified Departure with Auto insertion of Guarantee amount",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(BLOCKED)18 - Simplified Departure with Auto insertion of Guarantee amount"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified Journey",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>1</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered></amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028- IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "-OOS--TBD--XI-35 - Normal Departure with Rejection of the Arrival Notification",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(OOS)(TBD)(XI)35 - Normal Departure with Rejection of the Arrival Notification"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB201909015000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24GB0000010000295</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB201909015000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB35\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05 - GET ALL IE015 - IE928 -IE028-IE029 -IE009",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{deptId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "06- POST IE007 Incorrect MRN",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>INcorrectMRN</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>0</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n       <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n       </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar arrivalId =  jsonData._links.self.href.split(\"/\")[5]\n\nbru.setEnvVar(\"arrivalId\",arrivalId);\n\n\ntest(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\nif (res.getStatus() !== 202) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "07 - GET IE007 -- IE057",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "-TBD--XI-33 - Simplified arrivals Unloading remarks accepted-rejected",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(TBD)(XI)33 - Simplified arrivals Unloading remarks accepted/rejected"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBACR24A1500654</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB201909015000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24GB0000010000295</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB201909015000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GBDESBT13ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB33\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650971e722271e12/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 - IE028 - IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/64be613545109b2d/messages/64be613842c12724",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE007 Simplified",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>24GB000246ILNWTSJ7</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIACE24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar arrivalId =  jsonData._links.self.href.split(\"/\")[5]\n\nbru.setEnvVar(\"arrivalId\",arrivalId);\n\n\ntest(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\nif (res.getStatus() !== 202) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET IE007 -- IE043",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/6509723a1a0f3d41/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "06- No stateOfSeals tag IE044 -Unloading Remarks-",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC044C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246CM3ZGGJ1</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n    </UnloadingRemark>\n</ncts:CC044C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "var moment = require('moment')\nlet yesterday = moment();\nyesterday.subtract(1, 'days');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", yesterday.format(\"YYYY-MM-DD\"))\n\n"
            },
            "vars": {},
            "assertions": [],
            "tests": "test(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "07- GET IE007 -IE043-  IE044- IE057",
          "seq": 7,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "08- VALID IE044 -Unloading Remarks-",
          "seq": 8,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC044C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>24GB000246ILNWTSJ7</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>1</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))\n\n"
            },
            "vars": {},
            "assertions": [],
            "tests": "test(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "09- GET messages IE007 -IE043-  IE044- IE057 - IE044 - IE025 -  IE045",
          "seq": 9,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "-TBD--XI-34 - Simplified Departure with Rejection of the Arrival Notification",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(TBD)(XI)34 - Simplified Departure with Rejection of the Arrival Notification"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBACR24A1500654</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB201909015000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24GB0000010000295</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB201909015000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GBDESBT13ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB34\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650972df7cc8dfaa/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04 - POST IE007",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>24GB000246VIB3WCJ7</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIACE24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar arrivalId =  jsonData._links.self.href.split(\"/\")[5]\n\nbru.setEnvVar(\"arrivalId\",arrivalId);\n\n\ntest(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\nif (res.getStatus() !== 202) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05 - GET ALL IE015 - IE928 -IE028-IE029 -IE009",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET IE007 -- IE057",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/6509733dcdaf2f61/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "-TBD-36 - Simplified Departure with Major discrepancies resolved",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(TBD)36 - Simplified Departure with Major discrepancies resolved"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBACR24A1500654</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB201909015000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24GB0000010000295</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB201909015000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GBDESBT13ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB34\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar depId =  jsonData._links.self.href\ndepId = depId.split(\"/\")[5]\nbru.setEnvVar(\"deptId\",depId);\nconsole.log(\"department id is \"+depId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/651d33ea1e233df3/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028-IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE007 Simplified",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>24GB0002468BQFS8J5</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIACE24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar arrivalId =  jsonData._links.self.href.split(\"/\")[5]\n\nbru.setEnvVar(\"arrivalId\",arrivalId);\n\n\ntest(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\nif (res.getStatus() !== 202) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET IE007 -- IE043",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/651d3f5e68a1cf53/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "06- VALID IE044 -Unloading Remarks- Scott Data Copy 2",
          "seq": 9,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246KK9OGRJ7</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>0</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>1</stateOfSeals>\n    </UnloadingRemark>\n    <Consignment>\n        <grossMass>2750.000</grossMass>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>2750.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>barly</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>950691</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>750.000</grossMass>\n                        <netMass>750.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n            <ConsignmentItem>\n                <goodsItemNumber>2</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <!-- <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode> -->\n                    <GoodsMeasure>\n                        <grossMass>750.000</grossMass>\n                        <netMass>750.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>2</numberOfPackages>\n                    <shippingMarks>Box of toys</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n            <ConsignmentItem>\n                <goodsItemNumber>3</goodsItemNumber>\n                <declarationGoodsItemNumber>3</declarationGoodsItemNumber>\n                <Commodity>\n                    <!-- <descriptionOfGoods>Baseball Bats</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>950691</harmonizedSystemSubHeadingCode>\n                    </CommodityCode> -->\n                    <GoodsMeasure>\n                        <grossMass>750.000</grossMass>\n                        <netMass>750.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>3</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC044C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))\n\n"
            },
            "vars": {},
            "assertions": [],
            "tests": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "06- VALID IE044 -Unloading Remarks- Scott Data Copy 3",
          "seq": 10,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246GW185PJ6</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>0</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>1</stateOfSeals>\n    </UnloadingRemark>\n    <Consignment>\n        <grossMass>2750.000</grossMass>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>2750.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>barly</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>950691</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>750.000</grossMass>\n                        <netMass>750.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n            <ConsignmentItem>\n                <goodsItemNumber>2</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <!-- <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode> -->\n                    <GoodsMeasure>\n                        <grossMass>750.000</grossMass>\n                        <netMass>750.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>2</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>2</numberOfPackages>\n                    <shippingMarks>Box of toys</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n            <ConsignmentItem>\n                <goodsItemNumber>3</goodsItemNumber>\n                <declarationGoodsItemNumber>3</declarationGoodsItemNumber>\n                <Commodity>\n                    <!-- <descriptionOfGoods>Baseball Bats</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>950691</harmonizedSystemSubHeadingCode>\n                    </CommodityCode> -->\n                    <GoodsMeasure>\n                        <grossMass>750.000</grossMass>\n                        <netMass>750.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>3</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>3</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC044C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))\n\n"
            },
            "vars": {},
            "assertions": [],
            "tests": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "06- VALID IE044 -Unloading Remarks- Scott Data Copy",
          "seq": 8,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246KK9OGRJ7</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>0</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>1</stateOfSeals>\n    </UnloadingRemark>\n    <Consignment>\n        <grossMass>1250.000</grossMass>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1250.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <!-- <descriptionOfGoods>Wheat</descriptionOfGoods> -->\n                    <!-- <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode> -->\n                    <GoodsMeasure>\n                        <grossMass>500.000</grossMass>\n                        <netMass>470.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <!-- <typeOfPackages>BX</typeOfPackages> -->\n                    <numberOfPackages>1</numberOfPackages>\n                    <!-- <shippingMarks>Box goods to be shipped</shippingMarks> -->\n                </Packaging>\n            </ConsignmentItem>\n            <!-- <ConsignmentItem>\n                <goodsItemNumber>2</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Baseball Bats</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>950691</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>750.000</grossMass>\n                        <netMass>750.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>2</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>3</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem> -->\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC044C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))\n\n"
            },
            "vars": {},
            "assertions": [],
            "tests": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "06- VALID IE044 -Unloading Remarks- Scott Data",
          "seq": 7,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246CXNESPJ6</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>0</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>1</stateOfSeals>\n    </UnloadingRemark>\n    <Consignment>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>500.000</grossMass>\n                        <netMass>470.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <!-- <shippingMarks>Box goods to be shipped</shippingMarks> -->\n                </Packaging>\n            </ConsignmentItem>\n            <ConsignmentItem>\n                <goodsItemNumber>2</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Baseball Bats</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>950691</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>750.000</grossMass>\n                        <netMass>750.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>2</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>3</numberOfPackages>\n                    <!-- <shippingMarks>Box goods to be shipped</shippingMarks> -->\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC044C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))\n\n"
            },
            "vars": {},
            "assertions": [],
            "tests": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "06- VALID IE044 -Unloading Remarks-",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC044C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>24GB0002468BQFS8J5</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))\n\n"
            },
            "vars": {},
            "assertions": [],
            "tests": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "07- GET IE007 -- IE043 -- IE044 --IE025 - IE019 - IE025 - IE045",
          "seq": 11,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "-TBD-37 - Simplified Departure Major discrepancies confirmed",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(TBD)37 - Simplified Departure Major discrepancies confirmed"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBACR24A1500654</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB201909015000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24GB0000010000295</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB201909015000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GBDESBT13ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB34\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar depId =  jsonData._links.self.href\ndepId = depId.split(\"/\")[5]\nbru.setEnvVar(\"deptId\",depId);\nconsole.log(\"department id is \"+depId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650975c1c45a4002/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -- IE028 -- IE029 - IE035",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{deptId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE007 Simplified",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>24GB000246FAQIALJ6</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIACE24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar arrivalId =  jsonData._links.self.href.split(\"/\")[5]\n\nbru.setEnvVar(\"arrivalId\",arrivalId);\n\n\ntest(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\nif (res.getStatus() !== 202) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET IE007 -- IE043",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/6509761506d52da6/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "06- VALID IE044 -Unloading Remarks-",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC044C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>24GB000246FAQIALJ6</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "07- GET IE007 -- IE043 -- IE044 --IE025 - IE019 - IE025 - IE045",
          "seq": 7,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "-TBD-40 - Simpified Departure",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(TBD)40 - Simpified Departure"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>2023-04-26T07:36:28</preparationDateAndTime>\n    <messageIdentification>1</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>2023-05-09</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>string</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>2023-05-10T07:36:28</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI954131533000</identificationNumber>\n        <name>XI E2E TTHolder</name>\n        <Address>\n            <streetAndNumber>Custom House, Custom Square</streetAndNumber>\n            <postcode>BT1 3ET</postcode>\n            <city>Belfast</city>\n            <country>XI</country>\n        </Address>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>09GB00000100000M0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>10000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>string</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB954131533000</identificationNumber>\n            <name>XI E2E TT</name>\n            <Address>\n                <streetAndNumber>Custom House, Custom Square</streetAndNumber>\n                <postcode>BT1 3ET</postcode>\n                <city>Belfast</city>\n                <country>XI</country>\n            </Address>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI954131533000</identificationNumber>\n            <name>GB E2E TT</name>\n            <Address>\n                <streetAndNumber>14 Westfield Avenue</streetAndNumber>\n                <postcode>E20 1HZ</postcode>\n                <city>Stratford, London</city>\n                <country>GB</country>\n            </Address>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <countryOfDispatch>XI</countryOfDispatch>\n            <grossMass>1000.000000000000</grossMass>\n            <referenceNumberUCR>string</referenceNumberUCR>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>010129</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('2', 'days');\n\n\nlet date1 = moment();\ndate1.add('8', 'days');\n\nvar text=\"TRATESTDEC1\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\ntext += charset;\nconsole.log (\"Text value is \"+text)\n\n\nbru.setVar(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));\nbru.setVar(\"TimOfPreMES10\", moment().format(\"HHmm\"));\nbru.setVar(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));\n\nbru.setVar(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));\nbru.setVar(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));\nbru.setVar(\"RefNumHEA4\",text)\nbru.setVar(\"IntConRefMES11\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar depId =  jsonData._links.self.href\ndepId = depId.split(\"/\")[5]\nbru.setEnvVar(\"deptId\",depId);\nconsole.log(\"department id is \"+depId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{deptId}}",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -- IE028 -- IE029 Copy",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{deptId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE007 Simplified Only Nipuls Data",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n  <messageSender>9999912345</messageSender>\n  <messageRecipient>NTA.UK</messageRecipient>\n  <preparationDateAndTime>2023-01-26T07:36:28</preparationDateAndTime>\n  <messageIdentification>1</messageIdentification>\n  <messageType>CC007C</messageType>\n  <TransitOperation>\n    <MRN>27ITD9BRA9397FGCJ9</MRN>\n    <arrivalNotificationDateAndTime>2023-03-23T11:11:04</arrivalNotificationDateAndTime>\n    <simplifiedProcedure>1</simplifiedProcedure>\n    <incidentFlag>0</incidentFlag>\n  </TransitOperation>\n  <Authorisation>\n    <sequenceNumber>1</sequenceNumber>\n    <type>C522</type>\n    <referenceNumber>AN35</referenceNumber>\n  </Authorisation>\n  <CustomsOfficeOfDestinationActual>\n    <referenceNumber>XI000142</referenceNumber>\n  </CustomsOfficeOfDestinationActual>\n  <TraderAtDestination>\n    <identificationNumber>21XI000060170D874</identificationNumber>\n  </TraderAtDestination>\n  <Consignment>\n    <LocationOfGoods>\n      <typeOfLocation>B</typeOfLocation>\n      <qualifierOfIdentification>Y</qualifierOfIdentification>\n      <UNLocode>CABFF</UNLocode>\n       </LocationOfGoods>\n  </Consignment>\n</ncts:CC007C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "test(\"POST IE007 must return status code 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nvar jsonData = res.getBody();\nvar arrivalId = jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"arrivalId\", arrivalId);",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "-TBD-41 - Simpified Incident  on Arrivals",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(TBD)41 - Simpified Incident  on Arrivals"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id - IE928 - IE028- IE029 - IE182",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650977bccb093f82/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "-TBD-41a - Normal Incident on Arrivals",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(TBD)41a - Normal Incident on Arrivals"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id - IE928 - IE028- IE029 - IE182",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/6491a939097d4998",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "-TIR-38 - Simplified Departure Single House Consignment",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(TIR)38 - Simplified Departure Single House Consignment"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>TIR</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <TIRCarnetNumber>XN25000050</TIRCarnetNumber>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n        <TIRHolderIdentificationNumber>DK222222222</TIRHolderIdentificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>B</guaranteeType>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Box of toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650976ee6a9f238e/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE056",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/64b6869df6de1542/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "-TIR-39 - Normal Departure Single House Consignment",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(TIR)39 - Normal Departure Single House Consignment"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal XI to XI",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>TIR</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <TIRCarnetNumber>XN25000050</TIRCarnetNumber>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI005160</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n        <TIRHolderIdentificationNumber>DK222222222</TIRHolderIdentificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>B</guaranteeType>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/65097742639f00ee/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -- IE028 -- IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/648c1c38848acca2/messages/648c1c3adcc61ce1",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "-XI-31 - Normal Arrivals",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(XI)31 - Normal Arrivals"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal Copy",
          "seq": 2,
          "request": {
            "url": "{{baseURL}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB201909015000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24GB0000010000295</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.00</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB201909015000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!--<PlaceOfLoading><country>GB</country><location>Dover</location></PlaceOfLoading>-->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.00</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure><grossMass>1000.00</grossMass><netMass>950.00</netMass></GoodsMeasure>\n                \n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB2\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBDEPAUTH001</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB954131533000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>09GB0000010000066</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.00</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.00</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                 <GoodsMeasure>\n                        <grossMass>1000.00</grossMass>\n                        <netMass>950.00</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB31\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650970ff868c4134/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 - IE028 - IE029",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/customs/transits/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE007 Normal",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246PCOOGYJ2</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>0</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar arrivalId =  jsonData._links.self.href.split(\"/\")[5]\n\nbru.setEnvVar(\"arrivalId\",arrivalId);\n\n\ntest(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\nif (res.getStatus() !== 202) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE007 -- IE045",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/65097153aa9539c9/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "-XI-32 - Simplified Arrivals",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "(XI)32 - Simplified Arrivals"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified 142",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBACR24A1500654</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB201909015000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24GB0000010000295</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB201909015000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GBDESBT13ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB32\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/64b545168573a416/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE007 Simplified 81",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>24GB000246G0MHFSJ8</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIACE24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <!-- <Incident>\n            <sequenceNumber>1</sequenceNumber>\n            <code>2</code>\n            <text>Broken seals</text>\n            <Location>\n                <qualifierOfIdentification>Z</qualifierOfIdentification>\n                <country>XI</country>\n                <Address>\n                    <streetAndNumber>Ayron 9</streetAndNumber>\n                    <postcode>RM155RN</postcode>\n                    <city>London</city>\n                </Address>\n            </Location>\n            <TransportEquipment>\n                <sequenceNumber>1</sequenceNumber>\n                <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n                <numberOfSeals>1</numberOfSeals>\n                <Seal>\n                    <sequenceNumber>1</sequenceNumber>\n                    <identifier>1234</identifier>\n                </Seal>\n            </TransportEquipment>\n        </Incident> -->\n    </Consignment>\n</ncts:CC007C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar arrivalId =  jsonData._links.self.href.split(\"/\")[5]\n\nbru.setEnvVar(\"arrivalId\",arrivalId);\n\n\ntest(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\nif (res.getStatus() !== 202) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET IE007 -- IE043",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/64b545aabcb9d0b8/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET IE928 -- IE028 -- IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/64ac08134bfefbf9/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "06- IE044 -Unloading Remarks-",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC044C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>24GB000246KYL65DJ2</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>1</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "let moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))\n\n"
            },
            "vars": {},
            "assertions": [],
            "tests": "test(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\n\nif (res.getStatus() !== 202) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "07- GET ALL IE007 -IE043-  IE044 - IE025 - IE045",
          "seq": 7,
          "request": {
            "url": "{{baseUrlContext}}/movements/arrivals/64ad131f42a54d4d/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "01 - Simplified Departure Single house consignment to single consignee",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "01 - Simplified Departure Single house consignment to single consignee"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified with No Consigner",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.00</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <!-- <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor> -->\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.00</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <communicationLanguageAtDeparture>en</communicationLanguageAtDeparture>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500663</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407741</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002B2</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <!-- <inlandModeOfTransport>4</inlandModeOfTransport>\n        <modeOfTransportAtTheBorder>1</modeOfTransportAtTheBorder> -->\n        <grossMass>1000.00</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407741</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XIDEPBT13ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>40</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <UNLocode>ADENC</UNLocode>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <!-- <countryOfDestination>GB</countryOfDestination> -->\n            <grossMass>1000.00</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -- IE028 -- IE029",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "02 - Normal Departure Single house consignment to single consignee",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "02 - Normal Departure Single house consignment to single consignee"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal Journey",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407741</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002B2</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.00</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407741</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>40</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.00</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -- IE028 -- IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "03 - Simplified Departure Safety and Security data",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "03 - Simplified Departure Safety and Security data"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>1</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <modeOfTransportAtTheBorder>1</modeOfTransportAtTheBorder>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <CountryOfRoutingOfConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <country>XI</country>\n        </CountryOfRoutingOfConsignment>\n        <ActiveBorderTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <customsOfficeAtBorderReferenceNumber>GB000246</customsOfficeAtBorderReferenceNumber>\n            <typeOfIdentification>11</typeOfIdentification>\n            <identificationNumber>Spideychelle</identificationNumber>\n            <nationality>XI</nationality>\n        </ActiveBorderTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <PlaceOfUnloading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfUnloading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Box of toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -- IE028 -- IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "03a - Normal Departure Safety and Security data Copy",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "03a - Normal Departure Safety and Security data Copy"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>1</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <modeOfTransportAtTheBorder>1</modeOfTransportAtTheBorder>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <CountryOfRoutingOfConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <country>GB</country>\n        </CountryOfRoutingOfConsignment>\n        <ActiveBorderTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <customsOfficeAtBorderReferenceNumber>XI000081</customsOfficeAtBorderReferenceNumber>\n            <typeOfIdentification>11</typeOfIdentification>\n            <identificationNumber>Spideychelle</identificationNumber>\n            <nationality>XI</nationality>\n        </ActiveBorderTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <PlaceOfUnloading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfUnloading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -- IE028 -- IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "04 - Simplified Departure Single house consignment Departures with Rejection of a transit declaration",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "04 - Simplified Departure Single house consignment Departures with Rejection of a transit declaration"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified Journey",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI XYZ BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 GET ALL IE015 - IE056",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "05 - Normal Departure Single house consignment Departures with Rejection of a transit declaration",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "05 - Normal Departure Single house consignment Departures with Rejection of a transit declaration"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>FRCQF</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE056",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "06 - Normal Departure with invalid GRN",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "06 - Normal Departure with invalid GRN"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000110</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028 - IE055 - IE051",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "07 - Simplified Departure with amendments accepted",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "07 - Simplified Departure with amendments accepted"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE013",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC013C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <MRN>24XI000081MZVSWCJ0</MRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setEnvVar(\"messageId\",messageId);\nconsole.log(messageId)\n\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET json IE015 - IE928 -IE028-IE013-- IE004--IE029",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/{{messageId}}",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "08 - Normal Departure with amendments accepted",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "08 - Normal Departure with amendments accepted"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE013",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC013C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <MRN>24XI000081BQF6WKJ3</MRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928 -IE028-IE013-- IE004--IE029",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "06a - Simplified Departure with invalid GRN",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "06a - Simplified Departure with invalid GRN"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000110</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028 - IE055 - IE051",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "09 - Simplified Departure with Cancellation before release for transit",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "09 - Simplified Departure with Cancellation before release for transit"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE014 New XML 22-Jun",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081B3CZDPJ7</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setEnvVar(\"messageId\",messageId);\nconsole.log(messageId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE014",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081BXBCTSJ6</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <decisionDateAndTime>{{decisionDateAndTime}}</decisionDateAndTime>\n        <decision>1</decision>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setEnvVar(\"messageId\",messageId);\nconsole.log(messageId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928 -IE028-IE014- IE009",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "10 - Normal Departure with Cancellation before release for transit",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "10 - Normal Departure with Cancellation before release for transit"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal Journey",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/6501ce172c654be4/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE014 New XML 22-Jun",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081IFFMZNJ7</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setEnvVar(\"messageId\",messageId);\nconsole.log(messageId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE014",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081BXBCTSJ6</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <decisionDateAndTime>{{decisionDateAndTime}}</decisionDateAndTime>\n        <decision>1</decision>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setEnvVar(\"messageId\",messageId);\nconsole.log(messageId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928 -IE028-IE014- IE009",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/644a967f61a46534/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "11 - Simplified Departure with Cancellation after release for transit",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "11 - Simplified Departure with Cancellation after release for transit"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650833d2960739c5/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028-IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/6489ce8ce8959616/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE014 New XML 22-Jun",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081EIUOPOJ0</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setEnvVar(\"messageId\",messageId);\nconsole.log(messageId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928 -IE028-IE029-IE014- IE056",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "12 - Normal Departure with Cancellation after release for transit",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "12 - Normal Departure with Cancellation after release for transit"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal Journey",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/65083454b23b2549/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028-IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/648ac61cc5950446/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE014 New XML 22-Jun",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081I7MIQWJ9</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setEnvVar(\"messageId\",messageId);\nconsole.log(messageId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE014",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI0000810IQHWZJ0</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <decisionDateAndTime>{{decisionDateAndTime}}</decisionDateAndTime>\n        <decision>1</decision>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setEnvVar(\"messageId\",messageId);\nconsole.log(messageId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928 -IE028-IE029-IE014- IE056",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "13 - Simplified Departure with Cancellation of a transit declaration after release for transit by OoDep",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "13 - Simplified Departure with Cancellation of a transit declaration after release for transit by OoDep"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified Journey",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650844132c132123/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028-IE029- IE009",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/64945cb34af9dc14/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "13a - Normal Departure with Cancellation of a transit declaration after release for transit by OoDep",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "13a - Normal Departure with Cancellation of a transit declaration after release for transit by OoDep"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal Journey",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/6508448f4c7edc79/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -- IE028 -- IE029 -- IE009",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/64955421296b60b7/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "14 - Simplified Departure withControl by office of departure satisfactory",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "14 - Simplified Departure withControl by office of departure satisfactory"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified Journey",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650845143fe753ab/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028- IE060 - IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/648ac7d8d6bb2795/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "15 - Normal Departure withControl by office of departure satisfactory",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "15 - Normal Departure withControl by office of departure satisfactory"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal Journey",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI15\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/6512b77997abaf3b/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028- IE060- IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/648aca10b9944a6d/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "16 - Simplified Departure with Control by office of departure unsatisfactory",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "16 - Simplified Departure with Control by office of departure unsatisfactory"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified Journey",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/65084613a0110a8d/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028- IE060- IE051",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/648acb5dc41accee/messages/648acb61df5628a4",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "19 - Simplified Departure with Multiple house consignor to multiple consignee",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "19 - Simplified Departure with Multiple house consignor to multiple consignee"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1022.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <Consignor>\n                <identificationNumber>XI673265407737</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Veggies</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Veggie Boxes to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n        <HouseConsignment>\n            <sequenceNumber>2</sequenceNumber>\n            <grossMass>22.000</grossMass>\n            <Consignor>\n                <identificationNumber>GB954131533000</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Bike</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>871200</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>22.000</grossMass>\n                        <netMass>20.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650847319065470a/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028- IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/648ac9075b72cc5f/messages/648ac90afc2c76b7",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "17 - Normal Departure with Control by office of departure unsatisfactory",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "17 - Normal Departure with Control by office of departure unsatisfactory"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal Journey",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650846665742cb9c/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028- IE060- IE051",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/648acc65e3551428/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "20 - Normal Departure with Multiple house consignor to multiple consignee",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "20 - Normal Departure with Multiple house consignor to multiple consignee"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1022.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <Consignor>\n                <identificationNumber>XI673265407737</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Veggies</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n        <HouseConsignment>\n            <sequenceNumber>2</sequenceNumber>\n            <grossMass>22.000</grossMass>\n            <Consignor>\n                <identificationNumber>GB954131533000</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Bike</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>871200</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>22.000</grossMass>\n                        <netMass>20.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/64b651a6bd8f2b9e/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928 -IE028- IE029",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/648acd868d49d5c5/messages/648acde633fe14d3",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "21 - Simplified Pre-lodged Declaration Single house consignment to single consignee",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "21 - Simplified Pre-lodged Declaration Single house consignment to single consignee"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Box of toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650848e26a1baac0/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE170",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12309261153</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n   <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928- IE170 -IE028- IE029",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "23 - Simplified Pre-lodged Declaration Positive with Control",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "23 - Simplified Pre-lodged Declaration Positive with Control"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Box of toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/65096b33a8b2a21b/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928-IE060",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/64897a350845bee9/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE170",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12411071342</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n   <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar depId =  jsonData._links.self.href\ndepId = depId.split(\"/\")[5]\nbru.setEnvVar(\"deptId\",depId);\nconsole.log(\"department id is \"+depId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928 - IE060 -  IE170 -IE028- IE029",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/644a7d03c62e0438/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "22 - Normal Pre-lodged Declaration Single house consignment to single consignee",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "22 - Normal Pre-lodged Declaration Single house consignment to single consignee"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Box of toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/6508496cf916acdc/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/648977ef5b9bf02e/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE170",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n      <LRN>TRATESTXI12411071338</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar depId =  jsonData._links.self.href\ndepId = depId.split(\"/\")[5]\nbru.setEnvVar(\"deptId\",depId);\nconsole.log(\"department id is \"+depId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928- IE170 -IE028- IE029",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "24 - Normal Pre-lodged Declaration Positive with Control",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "24 - Normal Pre-lodged Declaration Positive with Control"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Box of toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/65096bf3f158be22/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928-IE060",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/64898213988fd5f6/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE170",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n      <LRN>TRATESTXI12411071344</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928 - IE060 -  IE170 -IE028- IE029",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/64523c17126e8ff5/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "26 - Normal Pre-lodged Declaration Transit presentation not valid-rejected",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "26 - Normal Pre-lodged Declaration Transit presentation not valid/rejected"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Box of toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/65096d5d88820d92/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/648991512770e07e/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE170 with invalid UNLocode",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>1</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n      <LRN>TRATESTXI12411071350</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GVCEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928- IE170 -IE056",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "27 - Simplified Pre-lodged Declaration with Amendments",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "27 - Simplified Pre-lodged Declaration with Amendments"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Box of toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/65096ebcd33207f5/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/64899e4e19a8cd88/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE013",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC013C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12411071352</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>                \n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE170",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12411071352</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n   <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928- IE013 - IE004",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "07 - GET ALL IE015 - IE928- IE013 - IE004 - IE170 - IE028 - IE029",
          "seq": 7,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "25 - Simplified Pre-lodged Declaration Transit presentation not valid-rejected",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "25 - Simplified Pre-lodged Declaration Transit presentation not valid/rejected"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Box of toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/65096c96ef6c3276/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/64898555d149181f/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE170 no Authorisation tag",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12309191040</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n   <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar depId =  jsonData._links.self.href\ndepId = depId.split(\"/\")[5]\nbru.setEnvVar(\"deptId\",depId);\nconsole.log(\"department id is \"+depId)\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928- IE170 -IE056",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "28 - Normal Pre-lodged Declaration with Amendments",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "28 - Normal Pre-lodged Declaration with Amendments"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Box of toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/65096f68c276b160/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/6489a19cc21896ef/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE013",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC013C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12411071355</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>                \n                <Commodity>\n                    <descriptionOfGoods>Box of toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04- POST IE170",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n      <LRN>TRATESTXI12411071355</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05- GET ALL IE015 - IE928- IE013 - IE004",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "07 - GET ALL IE015 - IE928- IE013 - IE004 - IE170 - IE028 - IE029",
          "seq": 7,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "29 - Simplified Pre-lodged Declaration Positive with Cancellation",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "29 - Simplified Pre-lodged Declaration Positive with Cancellation"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Simplified",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIACR24A1500661</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Box of toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/6509702920ee7ac9/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/6489a474d0d28afd/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04 - POST IE014 New XML 22-Jun with justification",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12411071358</LRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04 - POST IE014",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12411071358</LRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <decisionDateAndTime>{{decisionDateAndTime}}</decisionDateAndTime>\n        <decision>1</decision>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05 - GET ALL IE015 - IE928 -  IE014 - IE009",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "30 - Normal Pre-lodged Declaration Positive with Cancellation",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "30 - Normal Pre-lodged Declaration Positive with Cancellation"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST IE015 Normal",
          "seq": 1,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>24XI00000100002A4</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI673265407737</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "02- GET IE015 dept Id",
          "seq": 2,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/650970982bc76965/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "03- GET ALL IE015 - IE928",
          "seq": 3,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/6489a7c44d78179d/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04 - POST IE014 New XML 22-Jun with justification reason",
          "seq": 5,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12411071402</LRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "04 - POST IE014",
          "seq": 4,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>GB933000</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12306141242</LRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <decisionDateAndTime>{{decisionDateAndTime}}</decisionDateAndTime>\n        <decision>1</decision>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI673265407737</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\", (11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "05 - GET ALL IE015 - IE928 -  IE014 - IE009",
          "seq": 6,
          "request": {
            "url": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.1+json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    }
  ],
  "activeEnvironmentUid": "DlGXZ9FKcUByNoBG8YoBc",
  "environments": [],
  "root": {
    "request": {
      "auth": {
        "mode": "none"
      },
      "vars": {
        "req": [
          {
            "name": "DatOfPreMES9",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "2EznDG2qUedzrU2KVVw9v"
          },
          {
            "name": "TimOfPreMES10",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "WlneOds5LXkAdyvgqmalA"
          },
          {
            "name": "DecDatHEA383",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "cpynMIzh5Ut5cYAlDWnwL"
          },
          {
            "name": "ArrTimTRACUS085",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "WifImawnOWiFEFt8ewqJ7"
          },
          {
            "name": "DatLimERS69",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "nxYju0iCTQTykTEl2AibO"
          },
          {
            "name": "RefNumHEA4",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "SsKMwmrg7O3olsIgIZXCT"
          },
          {
            "name": "IntConRefMES11",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "HaxtZjSP7285MGfsvzsRS"
          },
          {
            "name": "preparationDateAndTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "xr02cMs5y54Uw1j3WB5k3"
          },
          {
            "name": "ArrNotDatHEA141",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "qpWTqJAhl2Q46HvApspDe"
          },
          {
            "name": "UnlDatREM67",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "m3OErJP1ymoPoGMQeRrS0"
          },
          {
            "name": "LRN",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "dB6UpAKssSmN3YOBLkleU"
          },
          {
            "name": "limitDate",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "nhILMhdwuT6zQSsJSb4XC"
          },
          {
            "name": "arrivalTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "cyrZY66Mm6m1U5fRjVGwI"
          },
          {
            "name": "messageIdentification",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "q2Kw5EJo9NURJSvo3OCQ0"
          },
          {
            "name": "requestDateAndTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "AjrexoJ7lPOpsCTZaeVw3"
          },
          {
            "name": "decisionDateAndTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "W4iwoU9MKJdiEhovCy6Ql"
          },
          {
            "name": "arrivalNotificationDateAndTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "BqCjZbBFOWxIHp8NIylu5"
          },
          {
            "name": "unloadingDate",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "4R7Op2DBhFWKLHmYcHFrJ"
          }
        ]
      }
    },
    "meta": {
      "name": "12_P5 (SIT) Small Messages E2E Testing XI EORI FInal Mode"
    }
  },
  "brunoConfig": {
    "version": "1",
    "name": "12_P5 (SIT) Small Messages E2E Testing XI EORI FInal Mode",
    "type": "collection",
    "ignore": [
      "node_modules",
      ".git"
    ]
  }
}