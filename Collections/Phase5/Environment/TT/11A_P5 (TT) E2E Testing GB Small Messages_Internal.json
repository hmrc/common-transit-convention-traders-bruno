{
  "name": "11A_P5 (TT) E2E Testing GB Small Messages_Internal",
  "version": "1",
  "items": [
    {
      "type": "folder",
      "name": "Normal",
      "root": {
        "meta": {
          "name": "Normal"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "02 - Normal Departure Single house consignment to single consignee Data",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "02 - Normal Departure Single house consignment to single consignee Data"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Normal",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n          <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB2\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET ALL IE015 - IE928 -- IE028 -- IE029",
              "seq": 3,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "03A - Normal Departure Safety and Security data",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "03A - Normal Departure Safety and Security data"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Normal Security",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>1</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <modeOfTransportAtTheBorder>1</modeOfTransportAtTheBorder>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <CountryOfRoutingOfConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <country>XI</country>\n        </CountryOfRoutingOfConsignment>\n        <ActiveBorderTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <customsOfficeAtBorderReferenceNumber>GB000246</customsOfficeAtBorderReferenceNumber>\n            <typeOfIdentification>11</typeOfIdentification>\n            <identificationNumber>Spideychelle</identificationNumber>\n            <nationality>GB</nationality>\n        </ActiveBorderTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <PlaceOfUnloading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfUnloading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB3\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET ALL IE015 - IE928 -- IE028 -- IE029",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "06 - Normal Departure with invalid GRN",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "06 - Normal Departure with invalid GRN"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Normal with invalid GRN",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n       <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n          <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB6\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "03- GET ALL IE015 - IE928 -IE028 - IE055 - IE051",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "10 - Normal Departure with Cancellation before release for transit",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "10 - Normal Departure with Cancellation before release for transit"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Normal",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB10\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"now\", moment().format(\"YYYY-MM-DD hh:mm:ss\"));\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"IntConRefMES11\",(11190913102542,55190913102542))\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET IE015 dept Id",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/67dbf6bbaa416cba/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "03- POST IE014",
              "seq": 3,
              "request": {
                "url": "{{baseURL}}/movements/departures/67dbf6bbaa416cba/messages",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246MOQRAWJ2</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\n\nvar LRN=\"TRATEST10\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "04- GET ALL IE015 - IE928 -IE028-IE014- IE009",
              "seq": 4,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "12 - Normal Departure with Cancellation after release for transit",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "12 - Normal Departure with Cancellation after release for transit"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Normal",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB12\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET IE015 dept Id",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "03- POST IE014",
              "seq": 3,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{IntConRefMES11}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23GB0002464M0YC3J0</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('3', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"now\", moment().format(\"YYYY-MM-DD hh:mm:ss\"));\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"IntConRefMES11\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "04- GET ALL IE015 - IE928 -IE028-IE029 -- IE014- IE056",
              "seq": 4,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "15 - Normal Departure with Control by office of departure satisfactory",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "15 - Normal Departure with Control by office of departure satisfactory"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Normal",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB15\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET ALL IE015 - IE928 -IE028- IE060- IE029",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/67dbfdc561c1585e/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "17 - Normal Departure with Control by office of departure unsatisfactory",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "17 - Normal Departure with Control by office of departure unsatisfactory"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Normal",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB17\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET ALL IE015 - IE928 -IE028- IE060- IE051",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/67dbfe0ae3716a8d/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "13A - Cancellation of a transit declaration after release for transit by OoDep",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "13A - Cancellation of a transit declaration after release for transit by OoDep"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Normal",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB13\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "03- GET ALL IE015 - IE928 -IE028-IE029- IE009",
              "seq": 3,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "20 - Normal Departure with Multiple house consignor to multiple consignee",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "20 - Normal Departure with Multiple house consignor to multiple consignee"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Normal",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1022.000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000</grossMass>\n            <Consignor>\n                <identificationNumber>GB953574106000</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000</grossMass>\n                        <netMass>950.000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n        <HouseConsignment>\n            <sequenceNumber>2</sequenceNumber>\n            <grossMass>22.000000</grossMass>\n            <Consignor>\n                <identificationNumber>XI175521246821</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Daffodils</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>871200</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>22.000000</grossMass>\n                        <netMass>20.000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB20\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "03- GET ALL IE015 - IE928 -IE028- IE029",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/67dbfe4b9f2adf63/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "08 - Normal Departure Positive with Amendments",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "08 - Normal Departure Positive with Amendments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Normal",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB8\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "03- GET ALL IE015 - IE928 -IE028",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "03- POST IE013",
              "seq": 3,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC013C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246NEXJ5OJ2</MRN>\n         <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST7\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('3', 'days');\n\nvar LRN=\"TRATEST7\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"now\", moment().format(\"YYYY-MM-DD\"));\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYYMMDDHHmmss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DD\"));\nbru.setVar(\"IntConRefMES11\",(11190913102542,55190913102542))",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "05- GET ALL IE015 - IE928 -IE028-IE013-- IE004--IE029",
              "seq": 4,
              "request": {
                "url": "{{baseURL}}/movements/departures/67dbf64b8a8f20ba/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Simplified",
      "root": {
        "meta": {
          "name": "Simplified"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "03 - Simplified Departure Safety and Security data",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "03 - Simplified Departure Safety and Security data"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Simplified Security",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>1</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <modeOfTransportAtTheBorder>1</modeOfTransportAtTheBorder>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>20</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <CountryOfRoutingOfConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <country>XI</country>\n        </CountryOfRoutingOfConsignment>\n        <ActiveBorderTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <customsOfficeAtBorderReferenceNumber>GB000246</customsOfficeAtBorderReferenceNumber>\n            <typeOfIdentification>11</typeOfIdentification>\n            <identificationNumber>Spideychelle</identificationNumber>\n            <nationality>GB</nationality>\n        </ActiveBorderTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <PlaceOfUnloading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfUnloading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Coffee Beans</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB3\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET ALL IE015 - IE928 -- IE028 -- IE029",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "06A - Simplified Departure with invalid GRN",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "06A - Simplified Departure with invalid GRN"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 with invalid GRN",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>GB boxes to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB6\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "03- GET ALL IE015 - IE928 -IE028 - IE055 - IE051",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "01 - Simplified Departure Single house consignment to single consignee Data",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "01 - Simplified Departure Single house consignment to single consignee Data"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Simplified",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>GB boxes to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET IE015 --IE928--IE028--IE29",
              "seq": 4,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "07 - Simplified Departure with Amendments",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "07 - Simplified Departure with Amendments"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Simplified",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n       <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n          <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>GB goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB7\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "03- GET IE015 dept Id",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "03- POST IE013",
              "seq": 3,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC013C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246JHSAY3J5</MRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n       <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n          <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                     <shippingMarks>GB goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST7\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('3', 'days');\n\nvar LRN=\"TRATEST7\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"now\", moment().format(\"YYYY-MM-DD\"));\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYYMMDDHHmmss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DD\"));\nbru.setVar(\"IntConRefMES11\",(11190913102542,55190913102542))",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "04- GET ALL IE015 - IE928 -IE028-IE013-- IE004--IE029",
              "seq": 5,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "09 - Simplified Departure with Cancellation before release for transit",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "09 - Simplified Departure with Cancellation before release for transit"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Simplified",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATESTGB9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\nconsole.log (\"Text value is \"+LRN)\nconsole.log (\"limitDate is \"+limitDate)\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"now\", moment().format(\"YYYY-MM-DD hh:mm:ss\"));\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"IntConRefMES11\",(11190913102542,55190913102542))\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "03- POST IE014",
              "seq": 3,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246ZPABRDJ3</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container is broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add(642, 'seconds')\n\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", now.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET IE015 dept Id",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "04- GET ALL IE015 - IE928 -IE028-IE014- IE009",
              "seq": 4,
              "request": {
                "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "11 - Simplified Departure with Cancellation after release for transit",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "11 - Simplified Departure with Cancellation after release for transit"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Simplified",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB11\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET IE015 dept Id",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/67e13bff65652bef/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "04- POST IE014",
              "seq": 3,
              "request": {
                "url": "{{baseURL}}/movements/departures/67e13bff65652bef/messages",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{IntConRefMES11}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246XSWGMLJ3</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container is broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('3', 'days');\n\nvar LRN=\"TRATEST9\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"now\", moment().format(\"YYYY-MM-DD hh:mm:ss\"));\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"IntConRefMES11\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "05- GET ALL IE015 - IE928 -IE028-IE029-IE014- IE056",
              "seq": 4,
              "request": {
                "url": "{{baseURL}}/movements/departures/67e13bff65652bef/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "13 - Simplified Departure with Officer Cancels Movement after release for transit",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "13 - Simplified Departure with Officer Cancels Movement after release for transit"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Simplified",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n       <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB13\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET ALL IE015 - IE928 -IE028-IE029- IE009",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/67e13c28831c55de/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "14 - Simplified Departure with Control by office of departure satisfactory",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "14 - Simplified Departure with Control by office of departure satisfactory"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Simplified",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB14\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET ALL IE015 - IE928 -IE028- IE060 - IE029",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/67e13c391a12febc/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "16 - Simplified Departure with Control by office of departure unsatisfactory",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "16 - Simplified Departure with Control by office of departure unsatisfactory"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Simplified",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB16\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "02- GET ALL IE015 - IE928 -IE028- IE060- IE051",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/67e13c4d2dbbd2f5/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "19 - Simplified Departure with Multiple house consignor to multiple consignee",
          "root": {
            "docs": "IE015 > IE016",
            "meta": {
              "name": "19 - Simplified Departure with Multiple house consignor to multiple consignee"
            }
          },
          "items": [
            {
              "type": "http",
              "name": "01- POST IE015 Simplified",
              "seq": 1,
              "request": {
                "url": "{{baseURL}}/movements/departures",
                "method": "POST",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/xml",
                    "enabled": true
                  },
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "xml",
                  "xml": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1022.000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000</grossMass>\n            <Consignor>\n                <identificationNumber>GB953574106000</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000</grossMass>\n                        <netMass>950.000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n        <HouseConsignment>\n            <sequenceNumber>2</sequenceNumber>\n            <grossMass>22.000000</grossMass>\n            <Consignor>\n                <identificationNumber>XI175521246821</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Daffodils</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>871200</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>22.000000</grossMass>\n                        <netMass>20.000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>GB box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB19\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                },
                "vars": {},
                "assertions": [],
                "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "03- GET ALL IE015 - IE928 -IE028- IE029",
              "seq": 2,
              "request": {
                "url": "{{baseURL}}/movements/departures/67e13c5f2ef89cfa/messages",
                "method": "GET",
                "headers": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.hmrc.2.1+json",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Pre-lodgement",
      "root": {
        "meta": {
          "name": "Pre-lodgement"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Simplified",
          "root": {
            "meta": {
              "name": "Simplified"
            }
          },
          "items": [
            {
              "type": "folder",
              "name": "21 - Simplified Pre-lodged Declaration Single house consignment to single consignee",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "21 - Simplified Pre-lodged Declaration Single house consignment to single consignee"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Simplified",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>test goods</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB21\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "03- GET ALL IE015 - IE928",
                  "seq": 2,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04- POST IE170 Simplified",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB212307121136</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB21\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05- GET ALL IE015 - IE928- IE170 -IE028- IE029",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "25 - Simplified Pre-lodged Declaration Transit presentation not valid-rejected",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "25 - Simplified Pre-lodged Declaration Transit presentation not valid/rejected"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Simplified",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n      <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n      </PlaceOfLoading>  \n      <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>test goods</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB25\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "03- GET ALL IE015 - IE928",
                  "seq": 2,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04 - POST IE170 No Auth No",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN></LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB E20 100</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATEST25\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05- GET ALL IE015 - IE928- IE170 -IE056",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/64a529c8974df24a/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "27 - Simplified Pre-lodged Declaration with Amendments with Data",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "27 - Simplified Pre-lodged Declaration with Amendments with Data"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Simplified",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>  \n      <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>test goods</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB27\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "03- GET ALL IE015 - IE928",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04- POST IE013",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC013C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB272308011421</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n  <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>test goods</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATEST27\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05- GET ALL IE015 - IE928- IE013 - IE004",
                  "seq": 5,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "06- POST IE170 Simplified",
                  "seq": 6,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB272308011421</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB27\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "07 - GET ALL IE015 - IE928- IE013 - IE004 - IE170 - IE028 - IE029",
                  "seq": 7,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "29 - Simplified Pre-lodged Declaration Positive with Cancellation",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "29 - Simplified Pre-lodged Declaration Positive with Cancellation"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Simplified",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>test goods</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB29\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "03- GET ALL IE015 - IE928",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04 - POST IE014",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB292307051125</LRN>\n    </TransitOperation>\n   <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container is broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05 - GET ALL IE015 - IE928 -  IE014 - IE009",
                  "seq": 5,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "type": "folder",
          "name": "Normal",
          "root": {
            "meta": {
              "name": "Normal"
            }
          },
          "items": [
            {
              "type": "folder",
              "name": "28 - Normal Pre-lodged Declaration with Amendments",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "28 - Normal Pre-lodged Declaration with Amendments"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Normal",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB28\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "03- GET ALL IE015 - IE928",
                  "seq": 2,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages/",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04- POST IE013",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC013C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB282308011417</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATEST28\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05- GET ALL IE015 - IE928- IE013 - IE004",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "06- POST IE170 Normal",
                  "seq": 5,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB282310100944</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATEST28\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "07 - GET ALL IE015 - IE928- IE013 - IE004 - IE170 - IE028 - IE029",
                  "seq": 6,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/67dd3c51ba10035f/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "26 - Normal Pre-lodged Declaration Transit presentation not valid-rejected Data",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "26 - Normal Pre-lodged Declaration Transit presentation not valid/rejected Data"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Normal",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB26\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "02- GET IE015 dept Id",
                  "seq": 2,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04 - POST IE170 Normal Incorrect UNLocode",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB262307050928</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GB123</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATEST26\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05- GET ALL IE015 - IE928- IE170 -IE056",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/67dd3a5313d677cd/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "30 - Normal Pre-lodged Declaration Positive with Cancellation",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "30 - Normal Pre-lodged Declaration Positive with Cancellation"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Normal",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB30\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "03- GET ALL IE015 - IE928",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04 - POST IE014 Normal",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB302307051130</LRN>\n    </TransitOperation>\n     <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container is broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05 - GET ALL IE015 - IE928 -  IE014 - IE009",
                  "seq": 5,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "22 - Normal Pre-lodged Declaration Single house consignment to single consignee",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "22 - Normal Pre-lodged Declaration Single house consignment to single consignee"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Normal",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>GB</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB22\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "03- GET ALL IE015 - IE928",
                  "seq": 2,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04- POST IE170 Normal",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB222307051136</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB22\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar messageId =  jsonData._links.self.href.split(\"/\")[7]\n//depId = depId.split(\"/\")[5]\nbru.setGlobalEnvVar(\"messageId\",messageId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05- GET ALL IE015 - IE928- IE170 -IE028- IE029",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/67dd39ba014a0d9a/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Arrivals",
      "root": {
        "meta": {
          "name": "Arrivals"
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Normal",
          "root": {
            "meta": {
              "name": "Normal"
            }
          },
          "items": [
            {
              "type": "folder",
              "name": "31 - Normal arrivals",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "31 - Normal arrivals"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "02- GET IE015 dept Id",
                  "seq": 2,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages/",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04- POST IE007 Normal GB Arrivals",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>25XI000081NHRWDQJ5</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>0</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"POST IE007 must return status code 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nvar jsonData = res.getBody();\nvar arrivalId = jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"arrivalId\", arrivalId);",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05- GET ALL IE007 -- IE025 -- IE045",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/67dbeb8c0b59f475/messages/",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "type": "folder",
          "name": "Simplified",
          "root": {
            "meta": {
              "name": "Simplified"
            }
          },
          "items": [
            {
              "type": "folder",
              "name": "33 - Simplified arrivals Unloading remarks accepted-rejected",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "33 - Simplified arrivals Unloading remarks accepted/rejected"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Simplified",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastics</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Plastic Boxes</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "02- GET IE015 dept Id",
                  "seq": 2,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04- POST IE007 Simplified Copy",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246CXFBNDJ0</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>GBAUTHDES01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <Incident>\n            <sequenceNumber>1</sequenceNumber>\n            <code>1</code>\n            <text>Movement had to deviate</text>\n            <Location>\n                <qualifierOfIdentification>U</qualifierOfIdentification>\n                <UNLocode>GBBEL</UNLocode>\n                <country>XI</country>\n            </Location>\n        </Incident>\n    </Consignment>\n</ncts:CC007C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "// var loc = postman.getResponseHeader(\"Location\").toString();\n\nvar arrivalId = loc.split(\"/\")[5];\nbru.setGlobalEnvVar(\"arrivalId\",arrivalId);\n\ntest(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\nif (res.getStatus() !== 202) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04- POST IE007 Simplified",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081BE4VRFJ5</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>GBAUTHDES01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "// var loc = postman.getResponseHeader(\"Location\").toString();\n\nvar arrivalId = loc.split(\"/\")[5];\nbru.setGlobalEnvVar(\"arrivalId\",arrivalId);\n\ntest(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\nif (res.getStatus() !== 202) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "06- Valid IE044 -Unloading Remarks-",
                  "seq": 9,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/64c8de170ac4e3e2/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081JYRJUVJ9</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "let moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\ntest(\"Validate location\", function () {\n//     var arr_location = postman.getResponseHeader(\"Location\").toString();\n});\n\n// var loc = postman.getResponseHeader(\"Location\").toString();\ntests[loc] = loc;\nvar messageId = loc.split(\"/\")[7];\nbru.setGlobalEnvVar(\"messageId\",messageId);\nconsole.log(\"message id is \"+messageId)\n\nif (res.getStatus() !== 202) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "06-IE044 -Unloading Remarks- - Diff Seals",
                  "seq": 7,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/64d23df0d6ff0985/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081BE4VRFJ5</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>1</stateOfSeals>\n    </UnloadingRemark>\n    <Consignment>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1255</identifier>\n            </Seal>\n        </TransportEquipment>\n    </Consignment>\n    </ncts:CC044C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "let moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\ntest(\"Validate location\", function () {\n//     var arr_location = postman.getResponseHeader(\"Location\").toString();\n});\n\n// var loc = postman.getResponseHeader(\"Location\").toString();\ntests[loc] = loc;\nvar messageId = loc.split(\"/\")[7];\nbru.setGlobalEnvVar(\"messageId\",messageId);\nconsole.log(\"message id is \"+messageId)\n\nif (res.getStatus() !== 202) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "06-IE044 -Unloading Remarks- - No stateOfSeals",
                  "seq": 6,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/64d23df0d6ff0985/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081BE4VRFJ5</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n    </UnloadingRemark>\n</ncts:CC044C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "let moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\ntest(\"Validate location\", function () {\n//     var arr_location = postman.getResponseHeader(\"Location\").toString();\n});\n\n// var loc = postman.getResponseHeader(\"Location\").toString();\ntests[loc] = loc;\nvar messageId = loc.split(\"/\")[7];\nbru.setGlobalEnvVar(\"messageId\",messageId);\nconsole.log(\"message id is \"+messageId)\n\nif (res.getStatus() !== 202) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "07- GET IE007 -IE043-  IE044- IE057",
                  "seq": 8,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/64d23df0d6ff0985/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "07- GET IE007 -IE043",
                  "seq": 5,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/64d23df0d6ff0985/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "09- GET messages IE007 -IE043-  IE044- IE057 - IE044 - IE025",
                  "seq": 10,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/{{arrivalId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "32 - Simplified arrivals",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "32 - Simplified arrivals"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Simplified",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "02- GET IE015 dept Id",
                  "seq": 2,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/67dbedb8e2be6869/messages/",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04- POST IE007 Simplified",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>24XI000081CFST80J1</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>GBAUTHDES01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"POST IE007 must return status code 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nvar jsonData = res.getBody();\nvar arrivalId = jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"arrivalId\", arrivalId);",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05- GET IE007 -- IE043",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/67dbed9cdb49e132/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "06- IE044 -Unloading Remarks-",
                  "seq": 5,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/67125ebf2ae8914e/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>1</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>24XI000081CFST80J1</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>1</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "let moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "07- GET ALL IE007 -IE043-  IE044 - IE025 - IE045",
                  "seq": 7,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/67125ebf2ae8914e/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "34 - Simplified Departure with Cancellation of a transit declaration after release for transit by OoDep Copy",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "34 - Simplified Departure with Cancellation of a transit declaration after release for transit by OoDep Copy"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Simplified",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB13\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "02- GET ALL IE015 - IE928 -IE028-IE029- IE009",
                  "seq": 2,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/67dbeefd63ad5de0/messages/",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "03- POST IE007 Simplified",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB000060KNEJKEJ3</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>GBAUTHDES01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"POST IE007 must return status code 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nvar jsonData = res.getBody();\nvar arrivalId = jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"arrivalId\", arrivalId);",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05- GET IE007 -- IE057",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/64ca3576742c99b3/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "36 - Simplified Departure with Major discrepancies resolved",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "36 - Simplified Departure with Major discrepancies resolved"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Simplified",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastics</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Plastic Boxes</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST32\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "03- GET ALL IE015 - IE928 -IE028-IE029- IE019 - IE045",
                  "seq": 2,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/{{departureId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04- POST IE007",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081GESREDJ6</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>GBAUTHDES01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))\n"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar arrivalId =  jsonData._links.self.href.split(\"/\")[5]\n\nbru.setGlobalEnvVar(\"arrivalId\",arrivalId);\n\n\ntest(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\nif (res.getStatus() !== 202) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05- GET IE007 -- IE043",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/64c90f3434d6a865/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "06- VALID IE044 -Unloading Remarks-",
                  "seq": 5,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/64ca27c036ed0099/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081GESREDJ6</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "let moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\nif (res.getStatus() !== 202) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "07- GET IE007 -- IE043 -- IE044 --IE025 - IE025",
                  "seq": 6,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/{{arrivalId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "ASGB5 Nipuls Non Conformance Simplified",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "ASGB5 Nipuls Non Conformance Simplified"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Simplified",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>10000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>2000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>2000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n            <ConsignmentItem>\n                <goodsItemNumber>2</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>100119</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>wheat</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTXI1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "02- GET IE015 dept Id",
                  "seq": 2,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/67dbf05cb0079c1d/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get requested departure Id must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04- POST IE007 Simplified",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081IMDHRDJ0</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>GBAUTHDES01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"POST IE007 must return status code 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nvar jsonData = res.getBody();\nvar arrivalId = jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"arrivalId\", arrivalId);",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05- GET IE007 -- IE043",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/6526705f9e73f7bc/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "06- IE044 -Unloading Remarks-",
                  "seq": 5,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/{{arrivalId}}/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>1</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081IMDHRDJ0</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>0</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n    <Consignment>\n        <grossMass>2750.000</grossMass>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>2750.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Barley</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>950691</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>750.000</grossMass>\n                        <netMass>750.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <numberOfPackages>1</numberOfPackages>\n                </Packaging>\n            </ConsignmentItem>\n            <ConsignmentItem>\n                <goodsItemNumber>2</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <GoodsMeasure>\n                        <grossMass>2000.000</grossMass>\n                        <netMass>2000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC044C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "let moment = require('moment')\nlet today = moment();\n\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))\n\nbru.setVar(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "07- GET ALL IE007 -IE043-  IE044 - IE025 - IE045",
                  "seq": 6,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/{{arrivalId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "36A - Simplified Departure Major discrepancies confirmed",
              "root": {
                "docs": "IE015 > IE016",
                "meta": {
                  "name": "36A - Simplified Departure Major discrepancies confirmed"
                }
              },
              "items": [
                {
                  "type": "http",
                  "name": "01- POST IE015 Simplified",
                  "seq": 1,
                  "request": {
                    "url": "{{baseURL}}/movements/departures",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastics</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Plastic Boxes</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nvar LRN=\"TRATEST32\";\nvar charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar departureId =  jsonData._links.self.href.split(\"/\")[5]\nbru.setGlobalEnvVar(\"departureId\",departureId);\n\ntest(\"POST IE015 must return response code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}\n",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "03- GET ALL IE015 - IE928 -- IE028 -- IE029--IE019--IE035",
                  "seq": 2,
                  "request": {
                    "url": "{{baseURL}}/movements/departures/67dbefeb663ed48c/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/json",
                        "enabled": false
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all messages must return status code 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "04- POST IE007",
                  "seq": 3,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n  <messageSender>9999912345</messageSender>\n  <messageRecipient>NTA.GB</messageRecipient>\n  <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n  <messageIdentification>{{messageIdentification}}</messageIdentification>\n  <messageType>CC007C</messageType>\n  <TransitOperation>\n    <MRN>23GB000060NV5YRTJ2</MRN>\n    <arrivalNotificationDateAndTime>{{arrivalTime}}</arrivalNotificationDateAndTime>\n    <simplifiedProcedure>1</simplifiedProcedure>\n    <incidentFlag>0</incidentFlag>\n  </TransitOperation>\n  <Authorisation>\n    <sequenceNumber>1</sequenceNumber>\n    <type>C522</type>\n    <referenceNumber>GBAUTHDES01</referenceNumber>\n  </Authorisation>\n  <CustomsOfficeOfDestinationActual>\n    <referenceNumber>GB000246</referenceNumber>\n  </CustomsOfficeOfDestinationActual>\n  <TraderAtDestination>\n    <identificationNumber>GB953574106000</identificationNumber>\n  </TraderAtDestination>\n  <Consignment>\n    <LocationOfGoods>\n      <typeOfLocation>B</typeOfLocation>\n      <qualifierOfIdentification>Y</qualifierOfIdentification>\n      <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n    </LocationOfGoods>\n  </Consignment>\n</ncts:CC007C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "var moment = require('moment')\n\nbru.setVar(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));\nbru.setVar(\"TimOfPreMES10\", moment().format(\"HHmm\"));\nbru.setVar(\"IntConRefMES11\",(11190913102542,55190913102542))\nbru.setVar(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))\n"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "var jsonData = res.getBody();\nvar arrivalId =  jsonData._links.self.href.split(\"/\")[4]\n\nbru.setGlobalEnvVar(\"arrivalId\",arrivalId);\n\n\ntest(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\nif (res.getStatus() !== 202) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "05- GET IE007 -- IE043",
                  "seq": 4,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/64c910c75b2408ee/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "06- VALID IE044 -Unloading Remarks-",
                  "seq": 5,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/64c910c75b2408ee/messages",
                    "method": "POST",
                    "headers": [
                      {
                        "name": "Content-Type",
                        "value": "application/xml",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      },
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "xml",
                      "xml": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB000060NV5YRTJ2</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {
                      "req": "var moment = require('moment')\nlet yesterday = moment();\nyesterday.subtract(1, 'days');\n\nbru.setVar(\"DatOfPreMES9\", moment().format(\"YYYY-MM-DD\"));\nbru.setVar(\"TimOfPreMES10\", moment().format(\"HHmm\"));\n\nbru.setVar(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))\nbru.setVar(\"UnlDatREM67\", yesterday.format(\"YYYY-MM-DD\"))\n\n"
                    },
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Status code is 202\", function () {\n    expect(res.getStatus()).to.equal(202);\n});\n\nif (res.getStatus() !== 202) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "07- GET IE007 -- IE043 -- IE044 --IE025",
                  "seq": 6,
                  "request": {
                    "url": "{{baseURL}}/movements/arrivals/{{arrivalId}}/messages",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.hmrc.2.1+json",
                        "enabled": true
                      },
                      {
                        "name": "Authorization",
                        "value": "Bearer {{access_token}}",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": [],
                      "file": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [],
                    "tests": "test(\"Get all arrival must return status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\nif (res.getStatus() !== 200) {\n    return;\n}",
                    "docs": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "environments": [],
  "root": {
    "request": {
      "auth": {
        "mode": "none"
      },
      "vars": {
        "req": [
          {
            "name": "LRN",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "GjfDeyplji4f3F4F8t11x"
          },
          {
            "name": "limitDate",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "c2vd0cNtejWCHNRk4kyhT"
          },
          {
            "name": "preparationDateAndTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "uk3rmIPQXMsW1fY0FEmer"
          },
          {
            "name": "arrivalTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "4D8mIm1vqJrUrffebmgzi"
          },
          {
            "name": "messageIdentification",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "kAwQsTz9EoLkAwmaegKpA"
          },
          {
            "name": "IntConRefMES11",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "QsT6OeDSSrRurKTaMFWnI"
          },
          {
            "name": "now",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "zVJyMFyAV1Yi1AgCoWrUO"
          },
          {
            "name": "requestDateAndTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "MV7EfATaamlsMpGk4JV3R"
          },
          {
            "name": "decisionDateAndTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "tf3mX7NsgonfpBnloYwYM"
          },
          {
            "name": "arrivalNotificationDateAndTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "I01s4O6YryukB2W3GRblu"
          },
          {
            "name": "unloadingDate",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "erShwTK3kEAXchB5ntJGD"
          },
          {
            "name": "DatOfPreMES9",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "lcFnCC9VFu0457hYyOT0P"
          },
          {
            "name": "TimOfPreMES10",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "2OLaaeveWj3HFKMwq2Fxa"
          },
          {
            "name": "ArrNotDatHEA141",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "8dEMOvFPjrD2VB153gT2D"
          },
          {
            "name": "UnlDatREM67",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "hm4scjwqmIOpfk8ssCKdJ"
          }
        ]
      }
    },
    "meta": {
      "name": "11A_P5 (TT) E2E Testing GB Small Messages_Internal"
    }
  },
  "brunoConfig": {
    "version": "1",
    "name": "11A_P5 (TT) E2E Testing GB Small Messages_Internal",
    "type": "collection",
    "ignore": [
      "node_modules",
      ".git"
    ]
  }
}