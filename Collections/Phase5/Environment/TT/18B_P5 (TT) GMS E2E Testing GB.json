{
  "name": "18B_P5 (TT) GMS E2E Testing GB",
  "version": "1",
  "items": [
    {
      "type": "folder",
      "name": "03 - Guarantee Balance Enquiry Type9",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "03 - Guarantee Balance Enquiry Type9"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST GRN Balance Check Send within 60 mins",
          "seq": 2,
          "request": {
            "url": "{{apiGRNbaseURL}}/:grn/balance",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.0+json",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "grn",
                "value": "23GB0000010000872",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"accessCode\": \"AC01\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "01- POST GRN Balance Check Type9",
          "seq": 1,
          "request": {
            "url": "{{apiGRNbaseURL}}/:grn/balance",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.0+json",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "grn",
                "value": "23GB0000010000872",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"accessCode\": \"AC01\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "01- POST Invalid Access Codea and valid GRN Balance Check",
          "seq": 4,
          "request": {
            "url": "{{apiGRNbaseURL}}/:grn/balance",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.0+json",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "grn",
                "value": "23GB0000010000872",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"accessCode\": \"AC00\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "01- POST Invalid GRN Balance Check",
          "seq": 3,
          "request": {
            "url": "{{apiGRNbaseURL}}/:grn/balance",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.0+json",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "grn",
                "value": "23GB0000010000877",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"accessCode\": \"AC01\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "02 - Guarantee Balance Enquiry Type1",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "02 - Guarantee Balance Enquiry Type1"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST GRN Balance Check Send within 60 mins",
          "seq": 2,
          "request": {
            "url": "{{apiGRNbaseURL}}/:grn/balance",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.0+json",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "grn",
                "value": "23GB0000010000863",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"accessCode\": \"AC01\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "01- POST GRN Balance Check Type1",
          "seq": 1,
          "request": {
            "url": "{{apiGRNbaseURL}}/:grn/balance",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.0+json",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "grn",
                "value": "23GB0000010000863",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"accessCode\": \"AC01\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "01- POST Invalid Access Codea and valid GRN Balance Check",
          "seq": 4,
          "request": {
            "url": "{{apiGRNbaseURL}}/:grn/balance",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.0+json",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "grn",
                "value": "23GB0000010000863",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"accessCode\": \"AC00\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "01- POST Invalid GRN Balance Check",
          "seq": 3,
          "request": {
            "url": "{{apiGRNbaseURL}}/:grn/balance",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.0+json",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "grn",
                "value": "23GB0000010000865",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"accessCode\": \"AC01\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "01 - Guarantee Balance Enquiry Type0",
      "root": {
        "docs": "IE015 > IE016",
        "meta": {
          "name": "01 - Guarantee Balance Enquiry Type0"
        }
      },
      "items": [
        {
          "type": "http",
          "name": "01- POST GRN Balance Check Send within 60 mins",
          "seq": 2,
          "request": {
            "url": "{{apiGRNbaseURL}}/:grn/balance",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.0+json",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "grn",
                "value": "23GB0000010000854",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"accessCode\": \"AC01\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "01- POST GRN Balance Check Type0",
          "seq": 1,
          "request": {
            "url": "{{apiGRNbaseURL}}/:grn/balance",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.0+json",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "grn",
                "value": "23GB0000010000854",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"accessCode\": \"AC01\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "01- POST Invalid Access Codea and valid GRN Balance Check",
          "seq": 4,
          "request": {
            "url": "{{apiGRNbaseURL}}/:grn/balance",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.0+json",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "grn",
                "value": "23GB0000010000854",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"accessCode\": \"AC00\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "01- POST Invalid GRN Balance Check",
          "seq": 3,
          "request": {
            "url": "{{apiGRNbaseURL}}/:grn/balance",
            "method": "POST",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{access_token}}",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/vnd.hmrc.2.0+json",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "grn",
                "value": "23GB0000010000855",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"accessCode\": \"AC01\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "req": "const moment = require('moment');\nlet now = moment();\nnow.add('14', 'days');\n\nlet limitDate = now.format(\"YYYY-MM-DD\")\n\nlet arrivalTime = moment();\narrivalTime.add('14', 'days');\n\nlet LRN=\"TRATESTGB1\";\nlet charset = moment().format(\"YYMMDDHHmm\");\n\nLRN += charset;\n\nbru.setVar(\"LRN\", LRN);\nbru.setVar(\"limitDate\", limitDate);\nbru.setVar(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));\nbru.setVar(\"messageIdentification\",(11190913102542,55190913102542))"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    }
  ],
  "environments": [],
  "root": {
    "request": {
      "auth": {
        "mode": "none"
      },
      "vars": {
        "req": [
          {
            "name": "LRN",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "U8BSoqJEoyiduKpYxbzmw"
          },
          {
            "name": "limitDate",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "Ic4vPjdORzwmh4E4bRZfR"
          },
          {
            "name": "preparationDateAndTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "DvsAZLNNYH8hgPh6Geplt"
          },
          {
            "name": "arrivalTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "nKiRxcyo2DvTiqmvmLYfN"
          },
          {
            "name": "messageIdentification",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "yAc2gsZbhUDgeTvi1AEsK"
          },
          {
            "name": "arrivalNotificationDateAndTime",
            "value": "",
            "enabled": true,
            "local": false,
            "uid": "ztgGUs73KxaJQRDpQ5rSJ"
          }
        ]
      }
    },
    "meta": {
      "name": "18B_P5 (TT) GMS E2E Testing GB"
    }
  },
  "brunoConfig": {
    "version": "1",
    "name": "18B_P5 (TT) GMS E2E Testing GB",
    "type": "collection",
    "ignore": [
      "node_modules",
      ".git"
    ]
  }
}